{"ast":null,"code":"var _jsxFileName = \"/home/ahmadamali/resume-database/client/src/Components/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport { useCallback } from 'react';\nimport Dropzone from 'react-dropzone';\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DragDrop(props) {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(\"success\");\n  }, []);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  }, {\n    accept: '.pdf,.doc,.docx'\n  });\n  const acceptedFileItems = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"(Only *.pdf,*.docx and *.doc files will be accepted)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Accepted files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedFileItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DragDrop, \"ioFFWQf6lLXO1bMbNc0A07DRnUQ=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/home/ahmadamali/resume-database/client/src/Components/DragDrop.js"],"names":["Component","useCallback","Dropzone","React","useDropzone","DragDrop","props","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","accept","acceptedFileItems","map","file","path","size","className"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAMC,MAAM,GAAGN,WAAW,CAACO,aAAa,IAAI;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAFuB,EAErB,EAFqB,CAA1B;AAIA,QAAM;AACJF,IAAAA,aADI;AAEJG,IAAAA,YAFI;AAGJC,IAAAA;AAHI,MAIFR,WAAW,CAAC;AAACG,IAAAA;AAAD,GAAD,EAAW;AACxBM,IAAAA,MAAM,EAAE;AADgB,GAAX,CAJf;AAQA,QAAMC,iBAAiB,GAAGN,aAAa,CAACO,GAAd,CAAkBC,IAAI,iBAC9C;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADwB,CAA1B;AAMA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,oBAASN,YAAY,CAAC;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAD,CAArB;AAAA,8BACE,sBAAWP,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjCMT,Q;UAUDD,W;;;KAVCC,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import {Component} from 'react'\nimport {useCallback} from 'react'\nimport Dropzone from 'react-dropzone'\nimport React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nfunction DragDrop(props) {\n\n    const onDrop = useCallback(acceptedFiles => {\n        console.log(\"success\")\n      }, [])\n\n    const {\n      acceptedFiles,\n      getRootProps,\n      getInputProps\n    } = useDropzone({onDrop}, {\n      accept: '.pdf,.doc,.docx'\n    });\n\n    const acceptedFileItems = acceptedFiles.map(file => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n  \n    return (\n      <section className=\"container\">\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n          <em>(Only *.pdf,*.docx and *.doc files will be accepted)</em>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <ul>{acceptedFileItems}</ul>\n        </aside>\n      </section>\n    );\n  }\n  \n\n\n\n\nexport default DragDrop;"]},"metadata":{},"sourceType":"module"}