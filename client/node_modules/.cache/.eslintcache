[{"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\index.js":"1","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\App.js":"2","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\ApplicantForm.js":"3","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Dashboard.js":"4","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Login.js":"5","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Register.js":"6","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\DragDrop.js":"7","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\ExperienceForm.js":"8"},{"size":230,"mtime":1615004771194,"results":"9","hashOfConfig":"10"},{"size":1318,"mtime":1616269288794,"results":"11","hashOfConfig":"10"},{"size":8626,"mtime":1616230587327,"results":"12","hashOfConfig":"10"},{"size":152,"mtime":1616211424572,"results":"13","hashOfConfig":"10"},{"size":143,"mtime":1616211485316,"results":"14","hashOfConfig":"10"},{"size":149,"mtime":1616211480559,"results":"15","hashOfConfig":"10"},{"size":1098,"mtime":1616214862557,"results":"16","hashOfConfig":"10"},{"size":5194,"mtime":1616268832065,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bw63mp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\index.js",[],["38","39"],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\App.js",["40","41","42","43"],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\ApplicantForm.js",["44","45","46"],"import React, {\r\n  Fragment,\r\n  useState,\r\n  Component,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nexport default function ApplicantForm() {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [isFilePicked, setIsFilePicked] = useState(false);\r\n\r\n  const onSubmit = async (data, e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"pdf\", selectedFile);\r\n\r\n    const res = await fetch(\"http://localhost:5000/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n    data.resumelink = res.location;\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/personal\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      });\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setSelectedFile(acceptedFiles[0]);\r\n    setIsFilePicked(true);\r\n  }, []);\r\n\r\n  const {\r\n    acceptedFiles,\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    onDrop,\r\n    accept: \"application/pdf,.doc,.docx\",\r\n  });\r\n\r\n  useDropzone({ onDrop });\r\n\r\n  const acceptedFileItems = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Applicant Form</h1>\r\n      <form className=\"mt-5\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"fname\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              className=\"form-control\"\r\n              id=\"fname\"\r\n              placeholder=\"First Name\"\r\n              ref={register}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"lname\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              className=\"form-control\"\r\n              id=\"lname\"\r\n              placeholder=\"Last Name\"\r\n              ref={register}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"prefname\">Preferred Name (Optional)</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"prefName\"\r\n              className=\"form-control\"\r\n              id=\"prefname\"\r\n              placeholder=\"Preferred Name\"\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputEmail\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"inputEmail\"\r\n              placeholder=\"Email\"\r\n              ref={register}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputphonenumber\">Phone Number</label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phonenumber\"\r\n              className=\"form-control\"\r\n              id=\"inputphonenumber\"\r\n              placeholder=\"(123)-456-7890\"\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputAddress\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            className=\"form-control\"\r\n            id=\"inputAddress\"\r\n            placeholder=\"1234 Main St\"\r\n            ref={register}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label htmlFor=\"inputCity\">City</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              className=\"form-control\"\r\n              id=\"inputCity\"\r\n              ref={register}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"inputState\">Province</label>\r\n            <select\r\n              id=\"inputState\"\r\n              name=\"province\"\r\n              className=\"form-control\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n              required\r\n            >\r\n              <option value=\"\">Choose...</option>\r\n              <option value=\"AB\">Alberta</option>\r\n              <option value=\"BC\">British Columbia</option>\r\n              <option value=\"MB\">Manitoba</option>\r\n              <option value=\"NB\">New Brunswick</option>\r\n              <option value=\"NL\">Newfoundland and Labrador</option>\r\n              <option value=\"NS\">Nova Scotia</option>\r\n              <option value=\"ON\">Ontario</option>\r\n              <option value=\"PE\">Prince Edward Island</option>\r\n              <option value=\"QC\">Quebec</option>\r\n              <option value=\"SK\">Saskatchewan</option>\r\n              <option value=\"NT\">Northwest Territories</option>\r\n              <option value=\"NU\">Nunavut</option>\r\n              <option value=\"YT\">Yukon</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-md-2\">\r\n            <label htmlFor=\"inputZip\">Zip</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"zip\"\r\n              className=\"form-control\"\r\n              id=\"inputZip\"\r\n              ref={register}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <p>Websites (Optional)</p>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"web1\">LinkedIn</label>\r\n            <input\r\n              type=\"url\"\r\n              name=\"web1\"\r\n              className=\"form-control\"\r\n              id=\"web1\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"web2\">Github</label>\r\n            <input\r\n              type=\"url\"\r\n              name=\"web2\"\r\n              className=\"form-control\"\r\n              id=\"web2\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"web3\">Portfolio</label>\r\n            <input\r\n              type=\"url\"\r\n              name=\"web3\"\r\n              className=\"form-control\"\r\n              id=\"web3\"\r\n              placeholder=\"\"\r\n              ref={register}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"file\">Resume</label>\r\n          <div\r\n            className=\"form-control\"\r\n            {...getRootProps({ className: \"dropzone\" })}\r\n            style={style}\r\n          >\r\n            <input {...getInputProps()} type=\"file\" id=\"file\" name=\"file\" />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n            <em>(Only *.pdf,*.docx and *.doc files will be accepted)</em>\r\n          </div>\r\n          <aside>\r\n            <p>Accepted files:</p>\r\n            <ul>{acceptedFileItems}</ul>\r\n          </aside>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn bttnsub\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Login.js",[],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\Register.js",[],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\DragDrop.js",["47","48"],"import {Component} from 'react'\nimport {useCallback} from 'react'\nimport Dropzone from 'react-dropzone'\nimport React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nfunction DragDrop(props) {\n\n    const onDrop = useCallback(acceptedFiles => {\n        console.log(\"success\")\n      }, [])\n\n    const {\n      acceptedFiles,\n      getRootProps,\n      getInputProps\n    } = useDropzone({\n      onDrop,\n      accept: '.pdf,.doc,.docx'\n    });\n\n    useDropzone({onDrop});\n\n    const acceptedFileItems = acceptedFiles.map(file => (\n      <li key={file.path}>\n        {file.path} - {file.size} bytes\n      </li>\n    ));\n  \n    return (\n      <section className=\"container\">\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n          <em>(Only *.pdf,*.docx and *.doc files will be accepted)</em>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <ul>{acceptedFileItems}</ul>\n        </aside>\n      </section>\n    );\n  }\n  \n\nexport default DragDrop;",["49","50"],"C:\\Users\\VRPC\\Documents\\ada\\resume-database\\client\\src\\components\\ExperienceForm.js",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":35},{"ruleId":"58","severity":1,"message":"62","line":1,"column":37,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"63","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":11},{"ruleId":"58","severity":1,"message":"64","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":15},{"ruleId":"58","severity":1,"message":"65","line":4,"column":3,"nodeType":"60","messageId":"61","endLine":4,"endColumn":12},{"ruleId":"58","severity":1,"message":"66","line":42,"column":10,"nodeType":"60","messageId":"61","endLine":42,"endColumn":22},{"ruleId":"58","severity":1,"message":"67","line":60,"column":13,"nodeType":"60","messageId":"61","endLine":60,"endColumn":21},{"ruleId":"58","severity":1,"message":"65","line":1,"column":9,"nodeType":"60","messageId":"61","endLine":1,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":16},{"ruleId":"54","replacedBy":"69"},{"ruleId":"56","replacedBy":"70"},{"ruleId":"58","severity":1,"message":"66","line":8,"column":10,"nodeType":"60","messageId":"61","endLine":8,"endColumn":22},{"ruleId":"58","severity":1,"message":"71","line":10,"column":9,"nodeType":"60","messageId":"61","endLine":10,"endColumn":22},{"ruleId":"58","severity":1,"message":"67","line":31,"column":13,"nodeType":"60","messageId":"61","endLine":31,"endColumn":21},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'Expform' is defined but never used.","'Component' is defined but never used.","'isFilePicked' is assigned a value but never used.","'response' is assigned a value but never used.","'Dropzone' is defined but never used.",["72"],["73"],"'changeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]